---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: release
on:
  push:
    tags: [v*]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  WINDOWS_KEY: ${{ github.ref }}-windows
  LINUX_KEY: ${{ github.ref }}-linux
  IS_MANUAL: ${{ github.event_name == 'workflow_dispatch' }}
jobs:
  rust:
    strategy:
      matrix:
        platform:
          - name: Windows
            os: windows-latest
            key: ${{ env.WINDOWS_KEY }}
          - name: Linux
            os: ubuntu-latest
            key: ${{ env.LINUX_KEY }}
    name: Rust Lib (${{ matrix.platform.name }})
    runs-on: ${{ matrix.platform.os }}
    defaults:
      run:
        shell: bash
        working-directory: rust
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      - run: cargo build --release
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: rust/target/release/*
          key: ${{ matrix.platform.key }}
          enableCrossOsArchive: true
  releases:
    strategy:
      matrix:
        platform:
          - name: Windows
            pkg: release-windows
            key: ${{ env.WINDOWS_KEY }}
          - name: Linux
            pkg: release-linux
            key: ${{ env.LINUX_KEY }}
    name: Release (${{ matrix.platform.name }})
    runs-on: ubuntu-latest
    needs: rust
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache/restore@v4
        with:
          path: rust/target/release
          key: ${{ matrix.platform.key }}
          fail-on-cache-miss: true
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Build
        run: |
          git add -Nf rust/target/release
          nix build .#${{ matrix.platform.pkg }}
      - if: ${{ env.IS_MANUAL }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.pkg }}
          path: result/bited.zip
      - if: ${{ !env.IS_MANUAL }}
        name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          file: build/mac/bited.zip
          asset_name: bited_mac_$tag.zip

---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: rust
on:
  push:
    paths: [rust/**, .github/workflows/rust.yml]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  WINDOWS_KEY: ${{ github.sha }}-windows
  LINUX_KEY: ${{ github.sha }}-linux
jobs:
  windows:
    name: Build Rust Lib (Windows)
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
        working-directory: rust
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      - run: cargo build --release
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: rust/target/release
          key: ${{ env.WINDOWS_KEY }}
  linux:
    name: Build Rust Lib (Linux)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: rui314/setup-mold@v1
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      - run: cargo build --release
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: rust/target/release
          key: ${{ env.LINUX_KEY }}
  releases:
    name: Build Releases
    runs-on: ubuntu-latest
    needs: [windows, linux]
    steps:
      - uses: actions/cache/restore@v4
        with:
          path: rust/target/release
          key: ${{ env.WINDOWS_KEY }}
          fail-on-cache-miss: true
      - uses: actions/cache/restore@v4
        with:
          path: rust/target/release
          key: ${{ env.LINUX_KEY }}
          fail-on-cache-miss: true
      - run: ls rust/target/release
